name: Test
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run'     
        required: true
        default: 'development'
      mode:
        description: 'Running mode'  
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Running dev env
        if: github.event.inputs.environment == 'development'
        run: echo "Running dev env with mode ${{ github.event.inputs.mode }}"
      - name: Running prod env
        if: github.event.inputs.environment == 'production'
        run: echo "Running prod env with mode ${{ github.event.inputs.mode }}"
      - uses: actions/checkout@v1
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          #pip install -r requirements.txt
          pip install sklearn pytest
      - name: Test with pytest
        run: pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
          # Use always() to always run this step to publish test results when there are test failures
          if: ${{ always() }}
      #- name: Run the test1
        #run: |
          #python test1.py

